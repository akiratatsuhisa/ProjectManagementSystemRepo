@model ProjectManagementWebApp.Models.Project

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h2>Project</h2>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ProjectType)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ProjectType.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Status)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Status)
        </dd>
    </dl>
</div>

<div>
    <h3>Project Members</h3>
    <table class="table">
        <thead>
            <tr>
                <th>
                    StudentCode
                </th>
                <th>
                    ClassName
                </th>
                <th>
                    Grade
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.ProjectMembers)
            {
                <tr>
                    <td>
                        @item.Student.StudentCode
                    </td>
                    <td>
                        @item.Student.ClassName
                    </td>
                    <td>
                        @item.Grade
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div>
    <h3>Project Lecturers</h3>
    <table class="table">
        <thead>
            <tr>
                <th>
                    LecturerCode
                </th>

            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.ProjectLecturers)
            {
                <tr>
                    <td>
                        @item.Lecturer.LecturerCode
                    </td>

                </tr>
            }
        </tbody>
    </table>
</div>

<div>
    <h3>Project Schedules</h3>
    @{
        var ratedScheduleCount = 0;
    }
    <table class="table">
        <thead>
            <tr>
                <th>
                    Name
                </th>
                <th>
                    Rating
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.ProjectSchedules)
            {
                <tr>
                    <td>
                        @item.Name
                    </td>
                    <td>
                        @if (item.Rating.HasValue)
                        {
                            ratedScheduleCount++;
                        }
                        @(item.Rating.HasValue ? $"{item.Rating} point" : "Not-yet")
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <hr />
    <dl class="row">
        <dt class="col-sm-4">
            Compeleted Schedules
        </dt>
        <dd class="col-sm-8">
            @ratedScheduleCount
        </dd>
        <dt class="col-sm-4">
            Ongoing Schedules
        </dt>
        <dd class="col-sm-8">
            @(Model.ProjectSchedules.Count - ratedScheduleCount)
        </dd>
    </dl>
    @if (User.IsInRole("Lecturer"))
    {
        <div>
            @if (Model.Status.IsMarkable())
            {
                <a class="btn btn-success" asp-action="Mark" asp-route-id="@Model.Id">Mark Project</a>
            }
            else if(!Model.Status.IsDone())
            {
                @if (Model.Status.IsReportable())
                {
                    <form asp-action="ChangeStatus" method="post" class="d-inline">
                        <input type="hidden" name="Id" value="@Model.Id" />
                        <input type="hidden" name="Status" value="@ProjectStatus.Canceled" />
                        <button type="submit" class="btn btn-warning">Cancel Project</button>
                    </form>
                }
                else
                {
                    <form asp-action="ChangeStatus" method="post" class="d-inline">
                        <input type="hidden" name="Id" value="@Model.Id" />
                        <input type="hidden" name="Status" value="@ProjectStatus.Continued" />
                        <button type="submit" class="btn btn-success">Continue Project</button>
                    </form>
                }
                <form asp-action="ChangeStatus" method="post" class="d-inline">
                    <input type="hidden" name="Id" value="@Model.Id" />
                    <input type="hidden" name="Status" value="@ProjectStatus.Completed" />
                    <button type="submit" class="btn btn-primary">Check Complete Project</button>
                </form>
            }
        </div>
        <hr />
    }
</div>

<div>
    <a class="btn btn-outline-primary" asp-action="Index">Back to List</a>
    <a class="btn btn-primary" asp-action="Schedules" asp-route-projectId="@Model.Id">Schedule</a>
</div>
